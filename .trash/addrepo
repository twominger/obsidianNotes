#!/bin/bash

# Define repository and package directory
repodir="/centos8"
packagedir=""

# Check if one argument (package name) is passed
if [[ "$#" -eq 1 ]]; then
    packagedir="${repodir}/${1}"  # Set packagedir based on package name
else
    echo "Usage: $0 <package-name>"
    exit 1
fi

# Clean up /tmp/repo if it exists
if [[ -d /tmp/repo ]]; then
    rm -rf /tmp/repo/*
else
    mkdir -p /tmp/repo
fi

# Download the package to /tmp/repo
yum download --resolve --alldeps ${1} --downloaddir=/tmp/repo
#yum -y install ${1} --downloadonly --downloaddir=/tmp/repo

# Check if the package directory exists, if not, create it
if [[ -d ${packagedir} ]]; then
    rm -rf "${packagedir}/*"  # Clean existing packages if any
else
    mkdir -p "${packagedir}/Packages"  # Create Packages subdirectory if it doesn't exist
fi

# Move the downloaded packages to the package directory
mv /tmp/repo/* "${packagedir}/Packages/"

# Create or update the repository
createrepo --update ${packagedir}

# Check if createrepo was successful
if [[ $? -eq 0 ]]; then
    echo "Repository updated successfully at ${packagedir}"
else
    echo "Error updating repository"
    exit 1
fi

# 输出文件
repo_file="${repodir}/a.repo"

# 清空文件内容，以防文件已存在
> "$repo_file"

# 遍历 base_dir 目录下的所有子目录
for dir in "$repodir"/*/; do
  # 获取子目录的目录名
  dirname=$(basename "$dir")
  
  # 为每个子目录写入 repo 配置
  echo "[$dirname]" >> "$repo_file"
  echo "name = $dirname" >> "$repo_file"
  echo "baseurl = file://$dir" >> "$repo_file"  # 使用 file:// 来表示本地路径
  echo "gpgcheck = 0" >> "$repo_file"
  echo "" >> "$repo_file"  # 添加空行分隔
done

echo "a.repo 文件已经生成在 $repo_file"

